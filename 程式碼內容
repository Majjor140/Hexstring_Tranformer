using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

//=======for OpenDialog=======
using System.IO;

//=======for Database========
using System.Data.SQLite;
using Dapper;
using Newtonsoft.Json;

namespace _1120121_hexString
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }
        
        string fileName = "",       // 檔案名稱
               fileExtension = "",  // 檔案副檔名
               filepath = "",       // 檔案路徑
               hex = "",            // 十六進制字串
               str = "";//          // 字串
        string[] readResult = null; // 讀取文字檔結果
        int fileSize = -1;          // 檔案大小
        int linecount;              // 資料庫檔案數量

        static string dbPath = @".\database.sqlite3";   // 資料庫位置
        static string cnStr = "data source=" + dbPath;  // 給連結資料庫的位置

        class Hexdata
        {
            public string Hexstring { get; set; }
            public DateTime Timestamp { get; set; }

            public Hexdata(string hexstring, DateTime timestamp)
            {
                Hexstring = hexstring;
                Timestamp = timestamp;
            }
        }

        //========事件區=========
        #region Event

        private void Form1_Load(object sender, EventArgs e)
        {
            InitSQLiteDb();
            this.Text = "Hexstring Transfrom System";
            textBox4.AppendText("\r\n歡迎使用本系統 ! 右方為功能表，可根據分頁使用不同功能。");
            textBox4.AppendText("\r\n=========");
        }

        private void loadToolStripMenuItem_Click(object sender, EventArgs e)
        {
            OpenFileDialog dialog = new OpenFileDialog();

            //預設開檔路徑為本機桌面
            dialog.InitialDirectory = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);
            dialog.Filter = "txt file (*.txt)|*.txt";
            if (dialog.ShowDialog() == System.Windows.Forms.DialogResult.OK)
            {
                fileName = Path.GetFileNameWithoutExtension(dialog.FileName);
                fileExtension = Path.GetExtension(dialog.FileName);
                filepath = dialog.FileName;
                fileSize = FtB(filepath).Length;

                readResult = txtReadData(filepath);
            }
            else
                return;

            toolStripStatusLabel2.Text= string.Format("FileName:{0}{1}　Path:{2}　Size:{3}", fileName, fileExtension, filepath, fileSize);
            textBox4.AppendText("\r\n已讀取您的檔案 !\r\n=========");
            textBox1.Text = "";
            for (int i = 0; i < readResult.Length; i++)
            {
                //======print content========
                textBox1.AppendText(readResult[i] + "\r\n");
            }
        }


        private void button1_Click(object sender, EventArgs e)
        {
            if(readResult==null)
            {
                textBox1.Text = "目前沒有讀取檔案，尚無法進行轉換 !";
                return;
            }
            //=======print convert result========
            Hexdata[] data = new Hexdata[readResult.Length];

            textBox2.Text = "";
            for (int i = 0; i < readResult.Length; i++)
            {
                //======print Hex string========
                hex = BToHex(Encoding.UTF8.GetBytes(readResult[i]));

                data[i] = new Hexdata(hex, DateTime.Now);

                textBox2.AppendText(hex + "\r\n");
            }
            insertData(data);
        }

        private void button2_Click(object sender, EventArgs e)
        {
            int id=-1;
            try
            {
                id = Convert.ToInt16(textBox3.Text);
            }
            catch(Exception ex)
            {
                textBox4.AppendText("\r\n請輸入正常數值 !");
                return;
            }
            selectData(id, "Player");
        }

        private void button3_Click(object sender, EventArgs e)
        {
            int id = -1;
            Random rd = new Random();

            id = rd.Next(0, linecount) + 1;
            textBox3.Text = id.ToString();

            selectData(id, "Player");
        }
        #endregion

        //========函式區=========
        #region Function
        //==========Byte to Hex string Converter===========
        string BToHex(byte[] Bdata)
        {
            return BitConverter.ToString(Bdata).Replace("-", "");
        }

        //==========Hex string to Byte Converter===========
        byte[] HexToByte(string hexString)
        {
            byte[] bytes = new byte[hexString.Length / 2];
            for (int i = 0; i < hexString.Length; i = i + 2)
            {
                //以16進位進行轉換
                bytes[i / 2] = Convert.ToByte(hexString.Substring(i, 2), 16);
            }
            return bytes;
        }

        byte[] FtB(string filename)
        {
            FileStream pFileStream = null;
            byte[] pReadByte = new byte[0];
            try
            {
                pFileStream = new FileStream(filename, FileMode.Open, FileAccess.Read);
            }
            catch (Exception ex)
            {
                return null;
            }

            BinaryReader r = new BinaryReader(pFileStream);
            r.BaseStream.Seek(0, SeekOrigin.Begin);
            pReadByte = r.ReadBytes((int)r.BaseStream.Length);
            if (pFileStream != null)
                pFileStream.Close();
            return pReadByte;
        }

        string[] txtReadData(string path)
        {
            string[] str2 = null;

            if (File.Exists(path))
            {
                //======調整是否為逐筆讀取=======
                if(checkBox1.Checked)
                {
                    str2 = File.ReadAllLines(path);
                }
                else
                {
                    str2 = new string[1];
                    str2[0] = File.ReadAllText(path);
                }
            }

            return str2;
        }

        private void checkBox1_CheckedChanged(object sender, EventArgs e)
        {
            textBox4.AppendText("\r\n請重新讀取檔案..\r\n========");
        }
        #endregion

        //===== SQL 函式區 =======
        #region SQL Function
        // 初始化資料庫
        void InitSQLiteDb()
        {
            // 判定資料庫是否存在
            if (File.Exists(dbPath))
            {
                MessageBox.Show(dbPath+"已經存在!");
            }
            else
            {
                MessageBox.Show(dbPath + "創建中..");
                var cn = new SQLiteConnection(cnStr);
                // 執行以下命令
                cn.Execute(@"
                                CREATE TABLE Player (
                                id    INTEGER,
                                Hexstring VARCHAR,
                                TimeStamp datetime,
                                PRIMARY KEY(id AUTOINCREMENT)
                            );
                ");
            }
            refreshStatus();
        }

        void insertData(Hexdata[] data)
        {
            using (var cn = new SQLiteConnection(cnStr)) //連結資料庫檔案
            {
                //cn.Execute("DELETE FROM Player");

                //參數是用@paramName
                string script = "INSERT INTO Player VALUES (null, @Hexstring, @Timestamp)";
                int lastnumber = -1;
                try
                {
                    cn.Execute(script, data);
                }
                catch (Exception ex)
                {
                    textBox1.AppendText("\r\n指令為:" + script);
                    textBox1.AppendText($"\r\n測試Bug:{ex.Message}");
                }

                textBox4.AppendText("\r\n資料轉換成功且新增至資料庫 !\r\n=========");

                script = "SELECT MAX(id)+1 from Player";
                lastnumber = cn.QuerySingle<int>(script);

                for (int i=0;i<data.Length;i++)
                {
                    textBox4.AppendText("\r\n資料內容如下:\r\n\r\nid: " + (lastnumber-data.Length+i) + "\r\nhexstring: " + data[i].Hexstring + "\r\ntimestamp: " + data[i].Timestamp+"\r\n=========");
                }
                refreshStatus();
            }
        }

        void selectData(int id, string table)
        {
            string script = "SELECT * from "+table+" WHERE id = "+id;

            textBox5.Text = "";
            textBox6.Text = "";

            using (var cn = new SQLiteConnection(cnStr))
            {
                var list = cn.Query(script);

                foreach (dynamic rec in list)
                {
                    var data = rec as IDictionary<string, object>;

                    if (data["Hexstring"]==null)
                    {
                        textBox6.AppendText("該筆資料無法轉換回字串");
                    }
                    else
                    {
                        textBox5.AppendText(JsonConvert.SerializeObject(list, Formatting.Indented));

                        //======print string to hex========
                        str = Encoding.UTF8.GetString(HexToByte(data["Hexstring"].ToString()));
                        textBox6.AppendText(str+"\r\n");
                    }
                }
            }
        }

        //======畫面更新資料庫的最新狀態======
        void refreshStatus()
        {
            using (var cn = new SQLiteConnection(cnStr)) //連結資料庫檔案
            {
                //cn.Execute("DELETE FROM Player");

                //參數是用@paramName
                string script = "select count(*) from Player";

                try
                {
                    linecount = cn.QuerySingle<int>(script);
                    //textBox1.AppendText(JsonConvert.SerializeObject(linecount, Formatting.None));
                    toolStripStatusLabel1.Text = "Total:" + linecount + " data";

                    if(linecount<=0)
                    {
                        button2.Enabled = false;
                        button3.Enabled = false;
                    }
                    else
                    {
                        button2.Enabled = true;
                        button3.Enabled = true;
                    }
                }
                catch (Exception ex)
                {
                    textBox1.AppendText("\r\n指令為:" + script);
                    textBox1.AppendText($"\r\n測試Bug:{ex.Message}");
                }
            }
        }
        #endregion
    }
}
